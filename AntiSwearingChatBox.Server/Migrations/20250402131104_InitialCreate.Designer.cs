// <auto-generated />
using System;
using AntiSwearingChatBox.Repository.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AntiSwearingChatBox.Server.Migrations
{
    [DbContext(typeof(AntiSwearingChatBoxContext))]
    [Migration("20250402131104_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.ChatThread", b =>
                {
                    b.Property<int>("ThreadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ThreadId"));

                    b.Property<bool>("AllowAnonymous")
                        .HasColumnType("bit");

                    b.Property<int?>("AutoDeleteAfterDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastMessageAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<bool>("ModerationEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ThreadId")
                        .HasName("PK__ChatThre__688356845E42936A");

                    b.ToTable("ChatThreads");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.FilteredWord", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WordId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SeverityLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WordId")
                        .HasName("PK__Filtered__2C20F06639322A22");

                    b.HasIndex(new[] { "Word" }, "UQ__Filtered__95B501084AE8F06F")
                        .IsUnique();

                    b.ToTable("FilteredWords");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.MessageHistory", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModeratedMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("WasModified")
                        .HasColumnType("bit");

                    b.HasKey("MessageId")
                        .HasName("PK__MessageH__C87C0C9CDC014970");

                    b.HasIndex(new[] { "ThreadId" }, "IX_MessageHistory_ThreadId");

                    b.HasIndex(new[] { "UserId" }, "IX_MessageHistory_UserId");

                    b.ToTable("MessageHistory", (string)null);
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.ThreadParticipant", b =>
                {
                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ThreadId", "UserId");

                    b.HasIndex(new[] { "ThreadId" }, "IX_ThreadParticipants_ThreadId");

                    b.HasIndex(new[] { "UserId" }, "IX_ThreadParticipants_UserId");

                    b.ToTable("ThreadParticipants");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ResetToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("User");

                    b.Property<DateTime?>("TokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TrustScore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3, 2)")
                        .HasDefaultValue(1.00m);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C037765CB");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4D8DA359D")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105343506988F")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Server.Repo.Models.UserWarning", b =>
                {
                    b.Property<int>("WarningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarningId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ThreadId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WarningMessage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("WarningId")
                        .HasName("PK__UserWarn__21457158A1C6A6EF");

                    b.HasIndex(new[] { "ThreadId" }, "IX_UserWarnings_ThreadId");

                    b.HasIndex(new[] { "UserId" }, "IX_UserWarnings_UserId");

                    b.ToTable("UserWarnings");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.MessageHistory", b =>
                {
                    b.HasOne("AntiSwearingChatBox.Repository.Models.ChatThread", "Thread")
                        .WithMany("MessageHistories")
                        .HasForeignKey("ThreadId")
                        .IsRequired()
                        .HasConstraintName("FK_MessageHistory_ChatThreads");

                    b.HasOne("AntiSwearingChatBox.Repository.Models.User", "User")
                        .WithMany("MessageHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_MessageHistory_Users");

                    b.Navigation("Thread");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.ThreadParticipant", b =>
                {
                    b.HasOne("AntiSwearingChatBox.Repository.Models.ChatThread", "Thread")
                        .WithMany("ThreadParticipants")
                        .HasForeignKey("ThreadId")
                        .IsRequired()
                        .HasConstraintName("FK_ThreadParticipants_ChatThreads");

                    b.HasOne("AntiSwearingChatBox.Repository.Models.User", "User")
                        .WithMany("ThreadParticipants")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ThreadParticipants_Users");

                    b.Navigation("Thread");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Server.Repo.Models.UserWarning", b =>
                {
                    b.HasOne("AntiSwearingChatBox.Repository.Models.ChatThread", "Thread")
                        .WithMany("UserWarnings")
                        .HasForeignKey("ThreadId")
                        .IsRequired()
                        .HasConstraintName("FK_UserWarnings_ChatThreads");

                    b.HasOne("AntiSwearingChatBox.Repository.Models.User", "User")
                        .WithMany("UserWarnings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UserWarnings_Users");

                    b.Navigation("Thread");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.ChatThread", b =>
                {
                    b.Navigation("MessageHistories");

                    b.Navigation("ThreadParticipants");

                    b.Navigation("UserWarnings");
                });

            modelBuilder.Entity("AntiSwearingChatBox.Repository.Models.User", b =>
                {
                    b.Navigation("MessageHistories");

                    b.Navigation("ThreadParticipants");

                    b.Navigation("UserWarnings");
                });
#pragma warning restore 612, 618
        }
    }
}
